{"version":3,"sources":["constants.ts","helpers/barsAndBeats.ts","assets/drums/CR78/index.js","assets/drums/CR78/kick.mp3","assets/drums/CR78/snare.mp3","assets/drums/CR78/hihat.mp3","assets/drums/CR78/tom1.mp3","assets/drums/CR78/tom2.mp3","assets/drums/TR808/index.js","assets/drums/TR808/kick.wav","assets/drums/TR808/snare.wav","assets/drums/TR808/hihat.wav","assets/drums/TR808/hihatOpen.wav","assets/drums/TR808/tom.wav","instruments/samplers.js","context/reducer.ts","utils.ts","context/GlobalState.tsx","style/disableUserSelect.ts","style/menuButton.ts","style/menuContainer.ts","style/styledLink.ts","components/Menu.tsx","style/flex.ts","style/grid.tsx","style/gridItem.ts","components/TriggerPoint.tsx","instruments/synthesizers.ts","pages/GridGoon.tsx","pages/HomePage.tsx","style/button.ts","components/SelectDrumSound.tsx","components/BeatStep.tsx","components/StepSequencer.tsx","helpers/actions.ts","style/slider.ts","components/GlobalTempoSlider.tsx","components/ClearPatternControls.tsx","components/MasterVolumeSlider.tsx","components/SelectDrumSampler.tsx","components/SaveOrLoadPattern.tsx","pages/RythmPage.tsx","style/appContainer.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","style/globalStyle.ts","index.tsx"],"names":["numbers","Array","from","multiplier","keys","bebopLocrian","reverse","DRUM","oneBarSixteenNote","CR78_URLS","C1","D1","E1","F1","G1","TR808_URLS","SAMPLERS","CR78","Sampler","urls","toDestination","TR808","ACTIONS","reducer","state","action","type","selectedSampler","payload","selectedDrumSound","selectedSynthSound","masterVolume","tempo","activeStep","triggeredKicks","triggeredSnares","triggeredHiHats","triggeredOpenHiHats","triggeredToms","clearedSounds","getClearedDrumPattern","key","data","stringifiedData","JSON","stringify","localStorage","setItem","persistInLocalStorage","savedState","getItem","parse","Error","retrieveFromLocalStorage","initialState","loopEnd","isLooping","note","steps","releaseInSeconds","store","createContext","Provider","GlobalState","children","useReducer","dispatch","Transport","bpm","value","loop","Destination","set","volume","useEffect","triggerAttackRelease","triggeredSteps","useGlobalState","useContext","disableUserSelect","css","hideScrollBar","MenuButton","styled","button","isOpen","position","space","typography","layout","defaultProps","top","left","marginY","marginX","padding","paddingX","fontSize","MenuContainer","div","props","color","flexbox","bottom","maxWidth","StyledLink","Link","Menu","useState","showMenu","setShowMenu","showSettings","setShowSettings","toggleMenu","onClick","zIndex","right","flexWrap","bg","to","m","Flex","hideScrollbar","border","display","flexDirection","alignItems","justifyContent","p","Grid","maxHeight","GridItem","isTouched","TriggerPoint","voice","octave","setIsTouched","handleTouchStart","e","preventDefault","triggerAttack","Tone","handleTouchEnd","triggerRelease","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","basicSynth","Synth","envelope","attack","release","sustain","Oscillator","frequency","Noise","AmplitudeEnvelope","decay","GridGoon","height","map","number","length","HomePage","Button","isSelected","SelectDrumSound","handleClick","currentTarget","name","borderRightWidth","borderColor","borderRightStyle","overflowX","mx","BeatStep","ACTION","step","StepSequencer","getPositionWithoutDecimals","toString","slice","indexOf","scheduleRepeat","interval","time","Draw","schedule","a","pause","startTone","start","standardBorder","standardBorderRadius","thumbStyle","trackStyle","thumbHeigth","sliderStyle","StyledSlider","input","GlobalTempoSlider","id","aria-label","max","min","onChange","ClearPatternControls","MasterVolumeSlider","SelectDrumSampler","SaveOrLoadPattern","RythmPage","startRhythm","margin","paddingY","width","AppContainer","Routes","exact","path","App","basename","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"0KACaA,EAAUC,MAAMC,KAAKD,MAAME,IAAyBC,QAGpDC,EAAe,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,MAAMC,UAE7DC,EACL,OADKA,EAEJ,QAFIA,EAGJ,QAHIA,EAIC,aAJDA,EAKN,MCAMC,EAA8B,CACzC,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACAF,UCtBWG,EAAY,CACvBC,GCPa,IAA0B,iCDQvCC,GERa,IAA0B,kCFSvCC,GGTa,IAA0B,kCHUvCC,GIVa,IAA0B,iCJWvCC,GKXa,IAA0B,kCCM5BC,EAAa,CACxBL,GCPa,IAA0B,iCDQvCC,GERa,IAA0B,kCFSvCC,GGTa,IAA0B,kCHUvCC,GIVa,IAA0B,sCJWvCC,GKXa,IAA0B,iCCe5BE,EAAW,CACtBC,KATW,IAAIC,IAAQ,CACvBC,KAAMV,IACLW,gBAQDC,MANY,IAAIH,IAAQ,CACxBC,KAAMJ,IACLK,iBCTI,IAAME,EACS,oBADTA,EAEE,cAFFA,EAGG,eAHHA,EAIQ,oBAJRA,EAKA,YALAA,EAMM,kBANNA,EAOU,sBAPVA,EAQW,uBARXA,EASW,uBATXA,EAUgB,4BAVhBA,EAWS,qBAXTA,EAYA,YAZAA,EAaI,gBAbJA,EAcG,eAdHA,EAeG,eAyBT,I,QAAMC,EAAU,SAACC,EAA2BC,GACjD,OAAQA,EAAOC,MACb,KAAKJ,EACH,OAAO,2BAAKE,GAAZ,IAAmBG,gBAAiBF,EAAOG,UAC7C,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBK,kBAAmBJ,EAAOG,UAC/C,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBM,mBAAoBL,EAAOG,UAChD,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBO,aAAcN,EAAOG,UAC1C,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBQ,MAAOP,EAAOG,UACnC,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBS,WAAYR,EAAOG,UACxC,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBU,eAAgBT,EAAOG,UAC5C,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBW,gBAAiBV,EAAOG,UAC7C,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBY,gBAAiBX,EAAOG,UAC7C,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBa,oBAAqBZ,EAAOG,UACjD,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBc,cAAeb,EAAOG,UAC3C,KAAKN,EACH,OAAO,2BAAKE,GAAUe,GACxB,KAAKjB,EACH,OAAO,2BAAKE,GA5ClB,SAA+BK,GAC7B,OAAQA,GACN,KAAKtB,EACH,MAAO,CAAE2B,eAAgB,IAC3B,KAAK3B,EACH,MAAO,CAAE4B,gBAAiB,IAC5B,KAAK5B,EACH,MAAO,CAAE6B,gBAAiB,IAC5B,KAAK7B,EACH,MAAO,CAAE8B,oBAAqB,IAChC,KAAK9B,EACH,MAAO,CAAE+B,cAAe,IAC1B,QACE,MAAO,IA+BeE,CAAsBf,EAAOG,UACrD,KAAKN,EAEH,OC1EC,SAA+BmB,EAAaC,GACjD,IAAMC,EAAkBC,KAAKC,UAAUH,EAAM,KAAM,GACnDI,aAAaC,QAAQN,EAAKE,GDuEtBK,CAAsBvB,EAAOG,QAAR,YAAC,eAAqBJ,GAAtB,IAA6BG,gBAAiB,QAC5DH,EACT,KAAKF,EAEH,IAAM2B,ECxEL,SAAkCR,GACvC,IAAIC,EACJ,GAAID,IACFC,EAAOI,aAAaI,QAAQT,IAE1B,OAAOG,KAAKO,MAAMT,GAGtB,MAAM,IAAIU,MAAJ,UAAaX,EAAb,eAAuBC,IDgENW,CAAyB5B,EAAOG,SAGnD,OAAO,2BAAKqB,GAAZ,IAAwBtB,gBAAiBH,EAAMG,kBACjD,QACE,OAAOH,I,QErDAe,EAAgB,CAC3BL,eAAgB,GAChBC,gBAAiB,GACjBC,gBAAiB,GACjBC,oBAAqB,GACrBC,cAAe,IAGXgB,EAA0B,yBAC9BtB,MAAO,IACPD,aAAc,EACdwB,QAAS,QACTC,WAAW,EACXC,KAAM,GACNC,MAAOlD,EACPyB,WAAY,KACZN,gBAAiBX,EAASC,KAC1BY,kBAAmBtB,EACnBuB,mBjBhCQ,SiBiCLS,GAX2B,IAY9BoB,iBAAkB,MAGdC,EAAqCC,wBAAcP,GACjDQ,EAAaF,EAAbE,SAEFC,EAAc,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAsC,EACjCC,qBAAW1C,EAAS+B,GADa,mBACpD9B,EADoD,KAC7C0C,EAD6C,KA2B3D,OAxBAC,IAAUC,IAAIC,MAAQ7C,EAAMQ,MAC5BmC,IAAUG,KAAO9C,EAAMgC,UACvBW,IAAUZ,QAAU/B,EAAM+B,QAE1BgB,IAAYC,IAAI,CAAEC,OAAQjD,EAAMO,eAEhC2C,qBAAU,WACJlD,EAAMU,eAAeV,EAAMS,aAC7BT,EAAMG,gBAAgBgD,qBAAqB,KAAM,IAE/CnD,EAAMW,gBAAgBX,EAAMS,aAC9BT,EAAMG,gBAAgBgD,qBAAqB,KAAM,IAE/CnD,EAAMY,gBAAgBZ,EAAMS,aAC9BT,EAAMG,gBAAgBgD,qBAAqB,KAAM,IAE/CnD,EAAMa,oBAAoBb,EAAMS,aAClCT,EAAMG,gBAAgBgD,qBAAqB,KAAM,IAE/CnD,EAAMc,cAAcd,EAAMS,aAC5BT,EAAMG,gBAAgBgD,qBAAqB,KAAM,MAElD,CAACnD,EAAMS,WAAYT,EAAMoD,eAAgBpD,EAAMG,kBAE3C,cAACmC,EAAD,CAAUO,MAAO,CAAE7C,QAAO0C,YAA1B,SAAuCF,KAG1Ca,EAAiB,kBAAMC,qBAAWlB,I,wBCnF3BmB,EAAoBC,cAAH,gaAUjBC,EAAgBD,cAAH,6NCLbE,GAAaC,UAAOC,OAAV,2KAED,qBAAGC,OAAuB,QAAU,WAC/C,qBAAGA,OAAuB,QAAU,UAG3CN,EACAO,IACAC,IACAC,IACAC,KAEJP,GAAWQ,aAAe,CACxBJ,SAAU,QACVK,IAAK,EACLC,KAAM,EACNC,QAAS,EACTC,QAAS,CAAC,EAAG,EAAG,GAChBC,QAAS,CAAC,GACVC,SAAU,EACVC,SAAU,GCrBL,I,GAAMC,GAAgBf,UAAOgB,IAAV,uRACZ,SAACC,GAAD,OAAYA,EAAMf,OAAS,GAAK,sBAS3CC,IACCC,IACAE,IACAY,IACAC,KAEJJ,GAAcR,aAAe,CAC3BJ,SAAU,WACVK,IAAK,EACLY,OAAQ,EACRC,SAAU,CAAC,QAAS,SCrBf,I,GAAMC,GAA0BtB,kBAAOuB,IAAPvB,CAAH,6TAQ9BI,IACAc,KCPC,SAASM,KAAQ,IACdzC,EAAaW,IAAbX,SADa,EAGW0C,oBAAkB,GAH7B,mBAGdC,EAHc,KAGJC,EAHI,OAImBF,oBAAkB,GAJrC,mBAIdG,EAJc,KAIAC,EAJA,KAMfC,EAAa,WACjB/C,EAAS,CAAExC,KAAMJ,EAAyBM,QAAS,QACnDkF,GAAaD,IAEf,OACE,qCACE,cAAC3B,GAAD,CAAYG,OAAQwB,EAAUK,QAASD,EAAvC,SACGJ,EAAW,IAAM,MAEpB,eAACX,GAAD,CAAeb,OAAQwB,EAAvB,UACE,cAAC3B,GAAD,CAAYiC,OAAQ,GAAIvB,KAAK,GAAGwB,MAAO,EAAG/B,OAAQ0B,EAAcG,QAAS,kBAAMF,GAAiBD,IAAhG,SACGA,EAAe,IAAM,QAExB,cAACb,GAAD,CAAemB,SAAS,OAAOF,OAAQ,GAAI9B,OAAQ0B,EAAcO,GAAG,SACpE,cAACb,GAAD,CAAYc,GAAG,SAASL,QAASD,EAAjC,mBACA,cAACR,GAAD,CAAYc,GAAG,aAAaL,QAASD,EAArC,6BDXRR,GAAWf,aAAe,CACxBK,QAAS,EACTyB,EAAG,GEXE,I,GAAMC,GAAOtC,UAAOgB,IAAV,qFACb,qBAAGuB,cAAqCzC,EAAgB,KACxDM,IACAE,IACAa,IACAD,IACAf,IACAqC,KAGJF,GAAK/B,aAAe,CAClBkC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,EAAG,GClBE,I,GAAMC,GAAO9C,UAAOgB,IAAV,8OAEA,qBAAG7F,QAAyB,MAAQ,KxBP3B,IwBapBgG,IACAb,KAENwC,GAAKvC,aAAe,CAClBK,QAAS,CAAC,EAAG,GACbmC,UAAW,CAAC,QAAS,QACrB1B,SAAU,CAAC,QAAS,SCdf,IAAM2B,GAAWhD,UAAOC,OAAV,6KAIG,qBAAGgD,UAA6B,QAAU,iBAC7C,qBAAGA,UAA6B,MAAQ,OACvDrD,EACAsB,KCDS,SAASgC,GAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,MAAO7E,EAAuB,EAAvBA,KAAM8E,EAAiB,EAAjBA,OAAiB,EACjC3B,oBAAkB,GADe,mBAC5DwB,EAD4D,KACjDI,EADiD,KAG7DC,EAAmB,SAACC,GACxBA,EAAEC,iBACFH,GAAa,GACbF,EAAMM,cAAcnF,EAAO8E,EAAQM,QAG/BC,EAAiB,SAACJ,GACtBA,EAAEC,iBACFH,GAAa,GACbF,EAAMS,eAAeF,QAGvB,OACE,cAACV,GAAD,CACEC,UAAWA,EACXY,YAAaP,EACbQ,UAAWH,EACXI,aAAcT,EACdU,WAAYL,EALd,SAOGrF,EAAO8E,IC9BP,I,GAAMa,GAAa,IAAIC,IAAM,CAClC5E,QAAS,GACT6E,SAAU,CACRC,OAAQ,IACRC,QAAS,GACTC,QAAS,MAEVrI,gBAEoB,IAAIsI,IAAW,CAAEC,UAAW,GAAIjI,KAAM,cACrC,IAAIkI,IAAM,CAAElI,KAAM,QAAS+C,QAAS,KAelC,IAAIoF,IAbS,CACrCN,OAAQ,IACRO,MAAO,GACPL,QAAS,GACTD,QAAS,KASsDpI,gBACtC,IAAIyI,IARC,CAC9BN,OAAQ,IACRO,MAAO,GACPL,QAAS,EACTD,QAAS,MAIwDpI,gBCxBpD,SAAS2I,KACtB,OACE,cAACtC,GAAD,CAAMuC,OAAO,OAAb,SACE,cAAC/B,GAAD,UAEIjI,EAAQiK,KAAI,SAACC,GACX,IAAI3B,EAAiB,IACjB9E,EAAOpD,EAAa6J,GAKxB,OAJIA,EAAS,IACXzG,EAAOpD,EAAa6J,EAAS7J,EAAa8J,QAC1C5B,EAAS,KAGT,cAACF,GAAD,CAAcC,MAAOc,GAAY3F,KAAMA,EAAM8E,OAAQA,WChBpD,SAAS6B,KACtB,OACE,eAAC3C,GAAD,CAAMuC,OAAO,OAAb,UACE,cAACvD,GAAD,CAAYc,GAAG,YAAf,uBACA,cAACd,GAAD,CAAYc,GAAG,QAAf,sBCAC,IAAM8C,GAASlF,UAAOC,OAAV,uSAKR,qBAAGkF,WAA+B,QAAU,WACjC,qBAAGA,WAA+B,QAAU,WACnD,qBAAGA,WAA+B,cAAgB,KAE7DvF,EACAO,IACAC,IACAC,IACAC,KCdG,SAAS8E,KAAmB,IAAD,EACJ1F,IAApBrD,EADwB,EACxBA,MAAO0C,EADiB,EACjBA,SAETsG,EAAc,SAAC9B,GAAD,OAAYxE,EAAS,CACvCxC,KAAMJ,EACNM,QAAS8G,EAAE+B,cAAcC,QAGrBJ,EAAa,SAACI,GAAD,OAA2BlJ,EAAMK,oBAAsB6I,GAC1E,OACE,iCACE,eAACjD,GAAD,CAAMC,eAAa,EAACiD,iBAAkB,EAAGC,YAAY,cAAcC,iBAAiB,QAAQ7C,EAAE,IAAIxB,SAAS,QAAQqB,cAAc,MAAMiD,UAAU,SAAS/C,eAAe,gBAAzK,UACE,cAACsC,GAAD,CACEC,WAAYA,EAAW/J,GACvBmK,KAAMnK,EACN2G,QAASsD,EAHX,kBAOA,cAACH,GAAD,CACEC,WAAYA,EAAW/J,GACvBmK,KAAMnK,EACN2G,QAASsD,EAHX,mBAOA,cAACH,GAAD,CACEC,WAAYA,EAAW/J,GACvBmK,KAAMnK,EACN2G,QAASsD,EAHX,uBAOA,cAACH,GAAD,CACEC,WAAYA,EAAW/J,GACvBmK,KAAMnK,EACN2G,QAASsD,EAHX,qBAOA,cAACH,GAAD,CACEC,WAAYA,EAAW/J,GACvBmK,KAAMnK,EACN2G,QAASsD,EAHX,yBDxBRH,GAAO3E,aAAe,CACpBG,QAAS,EACTkF,GAAI,EACJhF,QAAS,CAAC,GACVC,SAAU,EACVC,SAAU,EACVvE,KAAM,U,aEvBO,SAASsJ,GAAT,GAA6C,IAItDC,EACArG,EAL6BsG,EAAwB,EAAxBA,KAAwB,EAC7BrG,IAApBrD,EADiD,EACjDA,MAAO0C,EAD0C,EAC1CA,SACPjC,EAAeT,EAAfS,WAIR,OAAQT,EAAMK,mBACZ,KAAKtB,EACH0K,EAAS3J,EACTsD,EAAiBpD,EAAMU,eACvB,MACF,KAAK3B,EACH0K,EAAS3J,EACTsD,EAAiBpD,EAAMW,gBACvB,MACF,KAAK5B,EACH0K,EAAS3J,EACTsD,EAAiBpD,EAAMY,gBACvB,MACF,KAAK7B,EACH0K,EAAS3J,EACTsD,EAAiBpD,EAAMa,oBACvB,MACF,KAAK9B,EACH0K,EAAS3J,EACTsD,EAAiBpD,EAAMc,cACvB,MACF,QACE2I,EAAS3J,EACTsD,EAAiBpD,EAAMU,eAW3B,OACE,cAACiG,GAAD,CACEjB,QATe,WACjBhD,EAAS,CACPxC,KAAMuJ,EACNrJ,QAAQ,2BAAMgD,GAAP,mBAAwBsG,GAAQtG,EAAesG,QAOtD9C,UAAWnG,IAAeiJ,EAC1B5D,GAAI1C,EAAesG,GAAQ,SAAW,GAHxC,SAKIA,IC/CO,SAASC,KAAgB,IAE9B3J,EAAUqD,IAAVrD,MAER,OAEE,cAACyG,GAAD,CAAM3H,SAAO,EAAb,SACIkB,EAAMkC,MAAMuG,KAAI,SAACiB,GAAD,OAChB,cAACF,GAAD,CAEEE,KAAMA,GADDA,Q,2DCTf,SAASE,KACP,IAAM9F,EAAWnB,IAAUmB,SAAS+F,WACpC,OAAO/F,EAASgG,MAAM,EAAGhG,EAASiG,QAAQ,MAGrC,SAASC,GAAetH,GAAkC,IAAnBuH,EAAkB,uDAAP,MACvDtH,IAAUqH,gBAAe,SAACE,GACxB,IAAMpG,EAAW8F,KAEjBO,IAAKC,UAAS,WACZ1H,EAAS,CAAExC,KAAMJ,EAAyBM,QAAS0D,MAClDoG,KACFD,G,gDAIE,WAA2BvH,GAA3B,UAAA2H,EAAA,yDACmB,YAApB1H,IAAU3C,MADT,yCAEI2C,IAAU2H,SAFd,uBAKCC,eALD,cAOLP,GAAetH,EAAU,OAPpB,kBASEC,IAAU6H,SATZ,4C,sBChBP,IAKMC,GAAiBjH,cAAH,4DAGdkH,GAAuBlH,cAAH,uDAGpBmH,GAAanH,cAAH,gKACViH,GAXc,OAEJ,IAgBVG,GAAapH,cAAH,kFAEVkH,GAnBcG,KAsBdC,GAActH,cAAH,6TAEPoH,GAGAA,GAIAD,GAGAA,IAMGI,GAAepH,UAAOqH,MAAV,iFACnBN,GACAD,GACAK,GACA/G,IACAE,KC/CC,SAASgH,KAAqB,IAAD,EACN5H,IAApBrD,EAD0B,EAC1BA,MAAO0C,EADmB,EACnBA,SACf,OACE,qCAEE,0CACA,cAACqI,GAAD,CACEG,GAAG,QACHC,aAAW,QACXjL,KAAK,QACLkL,IAAK,IACLC,IAAK,EACL3B,KAAM,EACN7G,MAAO7C,EAAMQ,MACb8K,SAAU,SAACpE,GAAD,OAAYxE,EAAS,CAC7BxC,KAAMJ,EACNM,QAAS8G,EAAE+B,cAAcpG,cCf5B,SAAS0I,KAAwB,IAAD,EACTlI,IAApBrD,EAD6B,EAC7BA,MAAO0C,EADsB,EACtBA,SACf,OACE,eAACuD,GAAD,CAAMI,cAAc,MAApB,UACE,cAACwC,GAAD,CACE3I,KAAK,SACLwF,QAAS,kBAAMhD,EAAS,CACtBxC,KAAMJ,KAHV,uBAQA,cAAC+I,GAAD,CACE3I,KAAK,SACLwF,QAAS,kBAAMhD,EAAS,CACtBxC,KAAMJ,EACNM,QAASJ,EAAMK,qBAJnB,+BCbC,SAASmL,KAAsB,IAAD,EACPnI,IAApBrD,EAD2B,EAC3BA,MAAO0C,EADoB,EACpBA,SACf,OACE,qCAEE,2CACA,cAACqI,GAAD,CACEG,GAAG,gBACHC,aAAW,gBACXjL,KAAK,QACLkL,IAAK,GACLC,KAAM,GACN3B,KAAM,GACN7G,MAAO7C,EAAMO,aACb+K,SAAU,SAACpE,GAAD,OAAYxE,EAAS,CAC7BxC,KAAMJ,EACNM,QAAS8G,EAAE+B,cAAcpG,cCd5B,SAAS4I,KAAqB,IAC3B/I,EAAaW,IAAbX,SACR,OACE,eAACuD,GAAD,CAAMI,cAAc,MAApB,UACE,cAACwC,GAAD,CAAQnD,QAAS,kBAAMhD,EAAS,CAC9BxC,KAAMJ,EACNM,QAASZ,EAASK,SAFpB,mBAOA,cAACgJ,GAAD,CAAQnD,QAAS,kBAAMhD,EAAS,CAC9BxC,KAAMJ,EACNM,QAASZ,EAASC,QAFpB,qBCbC,SAASiM,KAAqB,IAC3BhJ,EAAaW,IAAbX,SACR,OACE,qCACE,cAACmG,GAAD,CAAQnD,QAAS,kBAAMhD,EAAS,CAAExC,KAAMJ,EAAsBM,QAAS,gBAAvE,kBAGA,cAACyI,GAAD,CAAQnD,QAAS,kBAAMhD,EAAS,CAAExC,KAAMJ,EAAsBM,QAAS,gBAAvE,qBCES,SAASuL,KAAa,IAC3BjJ,EAAaW,IAAbX,SAER,OACE,eAACuD,GAAD,CAAMM,eAAe,gBAArB,UACE,uCACA,cAACgF,GAAD,IACA,cAACE,GAAD,IACA,cAACR,GAAD,IACA,cAACO,GAAD,IACA,cAACE,GAAD,IACA,cAAC7C,GAAD,CAAQnD,QAAS,kBPJhB,SAAP,mCOI6BkG,CAAYlJ,IAAnC,SACuB,YAApBC,IAAU3C,MAAsB,OAAS,UAE5C,cAAC+I,GAAD,IACA,cAACY,GAAD,ONyBNoB,GAAa7G,aAAe,CAC1B2H,OAAQ,EACRrH,SAAU,EACVsH,SAAU,EACVC,MAAO,QACP/G,SAAU,KOtDL,IAAMgH,GAAerI,UAAOgB,IACjCb,KCGF,SAASmI,KACP,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACvD,GAAD,MAEF,cAAC,IAAD,CAAOuD,KAAK,SAAZ,SACE,cAACR,GAAD,MAEF,cAAC,IAAD,CAAOQ,KAAK,aAAZ,SACE,cAAC5D,GAAD,SDXRyD,GAAa9H,aAAe,CAC1BJ,SAAU,WAAYK,IAAK,EAAGY,OAAQ,EAAGa,MAAO,EAAGxB,KAAM,GC2B5CgI,OAXf,WACE,OACE,cAAC,IAAD,CAAeC,SAAS,iBAAxB,SACE,eAACL,GAAD,WACE,cAAC7G,GAAD,IACA,cAAC8G,GAAD,UCfFK,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DA0CnC,SAASC,GAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrN,QACf+M,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,+GAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MClGjE,I,GAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCPDO,GAAcC,4BAAH,mRACrBC,cCIHC,IAASC,OACP,cAAC,aAAD,UACE,eAAC,EAAD,WACE,cAACJ,GAAD,IACA,cAAC,GAAD,SAGJK,SAASC,eAAe,SHYnB,SAAkB/B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI+B,IAAIC,iBAAwBvC,OAAOC,SAASuC,MACpDC,SAAWzC,OAAOC,SAASwC,OAIvC,OAGFzC,OAAO0C,iBAAiB,QAAQ,WAC9B,IAAMrC,EAAK,UAAMkC,iBAAN,sBAEPzC,KAgEV,SAAiCO,EAAeC,GAE9CqC,MAAMtC,EAAO,CACXuC,QAAS,CAAE,iBAAkB,YAE5BlC,MAAK,SAACmC,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYvF,QAAQ,cAG5CgD,UAAUC,cAAcyC,MAAMvC,MAAK,SAACC,GAClCA,EAAauC,aAAaxC,MAAK,WAC7BV,OAAOC,SAASkD,eAKpB/C,GAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IAAI,oEAtFVkC,CAAwB/C,EAAOC,GAI/BC,UAAUC,cAAcyC,MAAMvC,MAAK,WACjCO,QAAQC,IACN,+GAMJd,GAAgBC,EAAOC,OGlC/B+C,GAKA9B,O","file":"static/js/main.dda01be6.chunk.js","sourcesContent":["export const multiplier = 4;\nexport const numbers = Array.from(Array(multiplier * multiplier).keys());\n\n// create a synth and connect it to the main output (your speakers)\nexport const bebopLocrian = ['C', 'Db', 'Eb', 'F', 'Gb', 'G', 'Ab', 'Bb'].reverse();\n\nexport const DRUM = {\n  KICK: 'KICK',\n  SNARE: 'SNARE',\n  HIHAT: 'HIHAT',\n  HIHAT_OPEN: 'HIHAT_OPEN',\n  TOM: 'TOM',\n};\n\nexport const SYNTH = {\n  SQUARE: 'SQURE',\n  SINE: 'SINE',\n  SAW: 'SAW',\n};\n","export const oneBarEightNote: string[] = [\n  '0:0:0',\n  '0:0:2',\n  '0:1:0',\n  '0:1:2',\n  '0:2:0',\n  '0:2:2',\n  '0:3:0',\n  '0:3:2',\n];\n\nexport const oneBarSixteenNote: string[] = [\n  '0:0:0',\n  '0:0:1',\n  '0:0:2',\n  '0:0:3',\n  '0:1:0',\n  '0:1:1',\n  '0:1:2',\n  '0:1:3',\n  '0:2:0',\n  '0:2:1',\n  '0:2:2',\n  '0:2:3',\n  '0:3:0',\n  '0:3:1',\n  '0:3:2',\n  '0:3:3',\n].reverse();\n","import kick from './kick.mp3';\nimport snare from './snare.mp3';\nimport hihat from './hihat.mp3';\nimport tom1 from './tom1.mp3';\nimport tom2 from './tom2.mp3';\n\nexport const CR78_URLS = {\n  C1: kick,\n  D1: snare,\n  E1: hihat,\n  F1: tom1,\n  G1: tom2,\n};\n","export default __webpack_public_path__ + \"static/media/kick.e8c4f08a.mp3\";","export default __webpack_public_path__ + \"static/media/snare.ebab59a2.mp3\";","export default __webpack_public_path__ + \"static/media/hihat.0dbc2e7a.mp3\";","export default __webpack_public_path__ + \"static/media/tom1.7e5272fb.mp3\";","export default __webpack_public_path__ + \"static/media/tom2.95a22fde.mp3\";","import kick from './kick.wav';\nimport snare from './snare.wav';\nimport hihat from './hihat.wav';\nimport hihatOpen from './hihatOpen.wav';\nimport tom from './tom.wav';\n\nexport const TR808_URLS = {\n  C1: kick,\n  D1: snare,\n  E1: hihat,\n  F1: hihatOpen,\n  G1: tom,\n};\n","export default __webpack_public_path__ + \"static/media/kick.5e338bd5.wav\";","export default __webpack_public_path__ + \"static/media/snare.d3f48900.wav\";","export default __webpack_public_path__ + \"static/media/hihat.64dc5aa4.wav\";","export default __webpack_public_path__ + \"static/media/hihatOpen.643cdeb7.wav\";","export default __webpack_public_path__ + \"static/media/tom.a23b661d.wav\";","/**\n * This file is .js cause .ts caused trouble when importing audio.\n */\nimport { Sampler } from 'tone';\nimport { CR78_URLS } from '../assets/drums/CR78';\nimport { TR808_URLS } from '../assets/drums/TR808';\n\nconst CR78 = new Sampler({\n  urls: CR78_URLS,\n}).toDestination();\n\nconst TR808 = new Sampler({\n  urls: TR808_URLS,\n}).toDestination();\n\nexport const SAMPLERS = {\n  CR78,\n  TR808,\n};\n","import { DRUM } from '../constants';\nimport { persistInLocalStorage, retrieveFromLocalStorage } from '../utils';\nimport { clearedSounds, IGlobalState } from './GlobalState';\n\nexport const ACTIONS = {\n  SELECT_DRUM_PRESET: 'SELECT_DRUMPRESET',\n  SELECT_DRUM: 'SELECT_DRUM',\n  SELECT_SYNTH: 'SELECT_SYNTH',\n  SET_MASTER_VOLUME: 'SET_MASTER_VOLUME',\n  SET_TEMPO: 'SET_TEMPO',\n  SET_ACTIVE_STEP: 'SET_ACTIVE_STEP',\n  SET_TRIGGERED_KICKS: 'SET_TRIGGERED_KICKS',\n  SET_TRIGGERED_SNARES: 'SET_TRIGGERED_SNARES',\n  SET_TRIGGERED_HIHATS: 'SET_TRIGGERED_HIHATS',\n  SET_TRIGGERED_OPEN_HIHATS: 'SET_TRIGGERED_OPEN_HIHATS',\n  SET_TRIGGERED_TOMS: 'SET_TRIGGERED_TOMS',\n  CLEAR_ALL: 'CLEAR_ALL',\n  CLEAR_PATTERN: 'CLEAR_PATTERN',\n  SAVE_PATTERN: 'SAVE_PATTERN',\n  LOAD_PATTERN: 'LOAD_PATTERN',\n};\n\nexport interface Action {\n    type: string;\n    payload: any;\n}\n\nfunction getClearedDrumPattern(selectedDrumSound: string): { [index:string]: {}} {\n  switch (selectedDrumSound) {\n    case DRUM.KICK:\n      return { triggeredKicks: {} };\n    case DRUM.SNARE:\n      return { triggeredSnares: {} };\n    case DRUM.HIHAT:\n      return { triggeredHiHats: {} };\n    case DRUM.HIHAT_OPEN:\n      return { triggeredOpenHiHats: {} };\n    case DRUM.TOM:\n      return { triggeredToms: {} };\n    default:\n      return {};\n  }\n}\n\nexport const reducer = (state: IGlobalState | any, action: Action) => {\n  switch (action.type) {\n    case ACTIONS.SELECT_DRUM_PRESET:\n      return { ...state, selectedSampler: action.payload };\n    case ACTIONS.SELECT_DRUM:\n      return { ...state, selectedDrumSound: action.payload };\n    case ACTIONS.SELECT_SYNTH:\n      return { ...state, selectedSynthSound: action.payload };\n    case ACTIONS.SET_MASTER_VOLUME:\n      return { ...state, masterVolume: action.payload };\n    case ACTIONS.SET_TEMPO:\n      return { ...state, tempo: action.payload };\n    case ACTIONS.SET_ACTIVE_STEP:\n      return { ...state, activeStep: action.payload };\n    case ACTIONS.SET_TRIGGERED_KICKS:\n      return { ...state, triggeredKicks: action.payload };\n    case ACTIONS.SET_TRIGGERED_SNARES:\n      return { ...state, triggeredSnares: action.payload };\n    case ACTIONS.SET_TRIGGERED_HIHATS:\n      return { ...state, triggeredHiHats: action.payload };\n    case ACTIONS.SET_TRIGGERED_OPEN_HIHATS:\n      return { ...state, triggeredOpenHiHats: action.payload };\n    case ACTIONS.SET_TRIGGERED_TOMS:\n      return { ...state, triggeredToms: action.payload };\n    case ACTIONS.CLEAR_ALL:\n      return { ...state, ...clearedSounds };\n    case ACTIONS.CLEAR_PATTERN:\n      return { ...state, ...getClearedDrumPattern(action.payload) };\n    case ACTIONS.SAVE_PATTERN:\n      persistInLocalStorage(action.payload, { ...state, selectedSampler: null });\n      return state;\n    case ACTIONS.LOAD_PATTERN:\n      // eslint-disable-next-line no-case-declarations\n      const savedState = retrieveFromLocalStorage(action.payload);\n      // could not store selectedSampler as string,\n      // so we set it to the current states sampler.\n      return { ...savedState, selectedSampler: state.selectedSampler };\n    default:\n      return state;\n  }\n};\n","export function persistInLocalStorage(key: string, data: any) {\n  const stringifiedData = JSON.stringify(data, null, 2);\n  localStorage.setItem(key, stringifiedData);\n}\n\nexport function retrieveFromLocalStorage(key: string): any {\n  let data;\n  if (key) {\n    data = localStorage.getItem(key);\n    if (data) {\n      return JSON.parse(data);\n    }\n  }\n  throw new Error(`${key} is ${data}`);\n}\n","// store.js\nimport {\n  Context, createContext, ReactNode, useContext, useEffect, useReducer,\n} from 'react';\nimport { Destination, Sampler, Transport } from 'tone';\nimport { DRUM, SYNTH } from '../constants';\nimport { oneBarSixteenNote } from '../helpers/barsAndBeats';\nimport { SAMPLERS } from '../instruments/samplers';\nimport { reducer } from './reducer';\n\nexport interface IGlobalState {\n    tempo: number;\n    masterVolume: number;\n    selectedDrumSound: string;\n    selectedSampler: Sampler;\n    selectedSynthSound: string;\n    note: string;\n    isLooping: boolean;\n    loopEnd: string;\n    steps: string[];\n    activeStep: string | null;\n    triggeredKicks: { [index:string] : string } | null;\n    triggeredSnares: { [index:string] : string } | null;\n    triggeredHiHats: { [index:string] : string } | null;\n    triggeredOpenHiHats: { [index:string] : string } | null;\n    triggeredToms: { [index:string] : string } | null;\n    releaseInSeconds: number;\n}\n\nexport const clearedSounds = {\n  triggeredKicks: {},\n  triggeredSnares: {},\n  triggeredHiHats: {},\n  triggeredOpenHiHats: {},\n  triggeredToms: {},\n};\n\nconst initialState: IGlobalState = {\n  tempo: 120,\n  masterVolume: 0,\n  loopEnd: '1:0:0',\n  isLooping: true,\n  note: '',\n  steps: oneBarSixteenNote,\n  activeStep: null,\n  selectedSampler: SAMPLERS.CR78,\n  selectedDrumSound: DRUM.KICK,\n  selectedSynthSound: SYNTH.SQUARE,\n  ...clearedSounds,\n  releaseInSeconds: 0.03,\n};\n\nconst store: Context<IGlobalState | any> = createContext(initialState);\nconst { Provider } = store;\n\nconst GlobalState = ({ children }: {children: ReactNode}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  Transport.bpm.value = state.tempo;\n  Transport.loop = state.isLooping;\n  Transport.loopEnd = state.loopEnd;\n\n  Destination.set({ volume: state.masterVolume });\n\n  useEffect(() => {\n    if (state.triggeredKicks[state.activeStep]) {\n      state.selectedSampler.triggerAttackRelease('C1', 0.5);\n    }\n    if (state.triggeredSnares[state.activeStep]) {\n      state.selectedSampler.triggerAttackRelease('D1', 0.5);\n    }\n    if (state.triggeredHiHats[state.activeStep]) {\n      state.selectedSampler.triggerAttackRelease('E1', 0.5);\n    }\n    if (state.triggeredOpenHiHats[state.activeStep]) {\n      state.selectedSampler.triggerAttackRelease('F1', 0.5);\n    }\n    if (state.triggeredToms[state.activeStep]) {\n      state.selectedSampler.triggerAttackRelease('G1', 0.5);\n    }\n  }, [state.activeStep, state.triggeredSteps, state.selectedSampler]);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nconst useGlobalState = () => useContext(store);\n\nexport { useGlobalState, GlobalState };\n","import { css } from 'styled-components';\n\nexport const disableUserSelect = css`\n -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n     -khtml-user-select: none; /* Konqueror HTML */\n       -moz-user-select: none; /* Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome and Opera */\n`;\n\nexport const hideScrollBar = css`\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n`;\n","import styled from 'styled-components';\nimport {\n  layout, position, space, typography,\n} from 'styled-system';\nimport { disableUserSelect } from './disableUserSelect';\nimport { StyleProps } from './types';\n\nexport const MenuButton = styled.button<StyleProps & any>`\n  z-index: 10;\n  background-color: ${({ isOpen }) => (isOpen ? 'black' : 'white')};;\n  color: ${({ isOpen }) => (isOpen ? 'white' : 'black')};\n  border: 1px solid;\n  border-radius: 4px;\n  ${disableUserSelect};\n  ${position};\n  ${space};\n  ${typography};\n  ${layout};\n`;\nMenuButton.defaultProps = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  marginY: 3,\n  marginX: [3, 4, 6],\n  padding: [2],\n  paddingX: 3,\n  fontSize: 4,\n};\n","import styled from 'styled-components';\nimport {\n  color, flexbox, layout, position, space,\n} from 'styled-system';\nimport { StyleProps } from './types';\n\nexport const MenuContainer = styled.div<StyleProps & any>`\n transform: ${(props) => (props.isOpen ? '' : 'translateX(-100%)')};\n  background-color: black;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  transition: transform 0.1s ease-in-out;\n ${position};\n  ${space};\n  ${layout};\n  ${color};\n  ${flexbox};\n`;\nMenuContainer.defaultProps = {\n  position: 'absolute',\n  top: 0,\n  bottom: 0,\n  maxWidth: ['100vw', '50vw'],\n};\n","import { Link } from 'react-router-dom';\nimport styled, { DefaultTheme, ThemedStyledInterface } from 'styled-components';\nimport { color, space } from 'styled-system';\n\ntype StyledTypes = ThemedStyledInterface<DefaultTheme> & any;\nexport const StyledLink: StyledTypes = styled(Link)`\n    background-color: black;\n    color: whitesmoke;\n    transition: all 0.2s ease-in-out;\n    &:focus, :hover {\n        transform: scale(1.2);\n        box-shadow: 0px 0px 30px 30px rgba(250,250,250, 0.4) inset, 0px 0px 20px 10px rgba(250, 250,250, 0.7);\n    };\n    ${space};\n    ${color};\n`;\n\nStyledLink.defaultProps = {\n  padding: 5,\n  m: 3,\n\n};\n","import { useState } from 'react';\nimport { useGlobalState } from '../context/GlobalState';\nimport { ACTIONS } from '../context/reducer';\nimport { MenuButton } from '../style/menuButton';\nimport { MenuContainer } from '../style/menuContainer';\nimport { StyledLink } from '../style/styledLink';\n\nexport function Menu() {\n  const { dispatch } = useGlobalState();\n\n  const [showMenu, setShowMenu] = useState<boolean>(false);\n  const [showSettings, setShowSettings] = useState<boolean>(false);\n\n  const toggleMenu = () => {\n    dispatch({ type: ACTIONS.SET_ACTIVE_STEP, payload: 'YES' });\n    setShowMenu(!showMenu);\n  };\n  return (\n    <>\n      <MenuButton isOpen={showMenu} onClick={toggleMenu}>\n        {showMenu ? 'X' : 'O'}\n      </MenuButton>\n      <MenuContainer isOpen={showMenu}>\n        <MenuButton zIndex={25} left=\"\" right={0} isOpen={showSettings} onClick={() => setShowSettings(!showSettings)}>\n          {showSettings ? 'X' : '|||'}\n        </MenuButton>\n        <MenuContainer flexWrap=\"wrap\" zIndex={20} isOpen={showSettings} bg=\"gray\" />\n        <StyledLink to=\"/rythm\" onClick={toggleMenu}>Riddm</StyledLink>\n        <StyledLink to=\"/grid-goon\" onClick={toggleMenu}>Grid Goon</StyledLink>\n      </MenuContainer>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport {\n  border,\n  color, flexbox, layout, position, space,\n} from 'styled-system';\nimport { hideScrollBar } from './disableUserSelect';\nimport { StyleProps } from './types';\n\nexport const Flex = styled.div<StyleProps & any>`\n  ${({ hideScrollbar }) => (hideScrollbar ? hideScrollBar : '')}\n  ${space};\n  ${layout};\n  ${flexbox};\n  ${color};\n  ${position};\n  ${border};\n`;\n\nFlex.defaultProps = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  p: 1,\n};\n","import styled from 'styled-components';\nimport { flexbox, layout } from 'styled-system';\nimport { StyleProps } from './types';\nimport { multiplier } from '../constants';\n\nexport const Grid = styled.div<StyleProps & any>`\n    display: grid;\n    direction: ${({ reverse }) => (reverse ? 'rtl' : '')};\n    grid-gap: 5px;\n    height: 100vw;\n    width: 100%;\n    grid-template-columns: repeat(${multiplier}, 1fr);\n    grid-template-rows: repeat(${multiplier}, 1fr);\n    ${flexbox};\n    ${layout};\n`;\nGrid.defaultProps = {\n  padding: [2, 4],\n  maxHeight: ['100vh', '70vh'],\n  maxWidth: ['100vh', '70vh'],\n};\n","import styled from 'styled-components';\nimport { color } from 'styled-system';\nimport { StyleProps } from './types';\nimport { disableUserSelect } from './disableUserSelect';\n\nexport const GridItem = styled.button<StyleProps & any>`\n    height: 100%;\n    transition: all 0.15s;\n    border: 1px solid;\n    background-color: ${({ isTouched }) => (isTouched ? 'black' : 'transparent')};\n    border-radius: ${({ isTouched }) => (isTouched ? '50%' : '5%')};\n    ${disableUserSelect};\n    ${color}\n`;\n","import { useState } from 'react';\nimport * as Tone from 'tone';\nimport { Synth, SynthOptions } from 'tone';\nimport { GridItem } from '../style/gridItem';\n\ninterface Props {\n  voice: Synth<SynthOptions>;\n  note: string;\n  octave: string;\n}\n\nexport default function TriggerPoint({ voice, note, octave }: Props) {\n  const [isTouched, setIsTouched] = useState<boolean>(false);\n\n  const handleTouchStart = (e: any) => {\n    e.preventDefault();\n    setIsTouched(true);\n    voice.triggerAttack(note + octave, Tone.now());\n  };\n\n  const handleTouchEnd = (e: any) => {\n    e.preventDefault();\n    setIsTouched(false);\n    voice.triggerRelease(Tone.now());\n  };\n\n  return (\n    <GridItem\n      isTouched={isTouched}\n      onMouseDown={handleTouchStart}\n      onMouseUp={handleTouchEnd}\n      onTouchStart={handleTouchStart}\n      onTouchEnd={handleTouchEnd}\n    >\n      {note + octave}\n    </GridItem>\n  );\n}\n","import {\n  AmplitudeEnvelope, Noise, Oscillator, Synth,\n} from 'tone';\n\nexport const basicSynth = new Synth({\n  volume: -10,\n  envelope: {\n    attack: 0.01,\n    release: 0.2,\n    sustain: 0.5,\n  },\n}).toDestination();\n\nexport const sineOsc = new Oscillator({ frequency: 60, type: 'triangle9' });\nexport const noiseOsc = new Noise({ type: 'white', volume: -10 });\n\nexport const sineEnvSettings: object = {\n  attack: 0.01,\n  decay: 0.3,\n  sustain: 0.5,\n  release: 0.5,\n};\nexport const noiseEnvSettings = {\n  attack: 0.01,\n  decay: 0.2,\n  sustain: 1,\n  release: 0.01,\n};\n\nexport const sineAmpEnv = new AmplitudeEnvelope(sineEnvSettings).toDestination();\nexport const noiseAmpEnv = new AmplitudeEnvelope(noiseEnvSettings).toDestination();\n","import { Flex } from '../style/flex';\nimport { Grid } from '../style/grid';\nimport TriggerPoint from '../components/TriggerPoint';\nimport { bebopLocrian, numbers } from '../constants';\nimport { basicSynth } from '../instruments/synthesizers';\n\nexport default function GridGoon() {\n  return (\n    <Flex height=\"100%\">\n      <Grid>\n        {\n          numbers.map((number) => {\n            let octave: string = '3';\n            let note = bebopLocrian[number];\n            if (number > 7) {\n              note = bebopLocrian[number - bebopLocrian.length];\n              octave = '2';\n            }\n            return (\n              <TriggerPoint voice={basicSynth} note={note} octave={octave} />\n            );\n          })\n        }\n      </Grid>\n    </Flex>\n  );\n}\n","import { Flex } from '../style/flex';\nimport { StyledLink } from '../style/styledLink';\n\nexport default function HomePage() {\n  return (\n    <Flex height=\"100%\">\n      <StyledLink to=\"grid-goon\">Grid Goon</StyledLink>\n      <StyledLink to=\"rythm\">Riddm</StyledLink>\n    </Flex>\n  );\n}\n","import styled from 'styled-components';\nimport {\n  layout, position, space, typography,\n} from 'styled-system';\nimport { disableUserSelect } from './disableUserSelect';\nimport { StyleProps } from './types';\n\nexport const Button = styled.button<StyleProps & any>`\n  border: 1px solid;\n  border-radius: 4px;\n  font-weight: \"200\";\n  white-space: nowrap;\n  color: ${({ isSelected }) => (isSelected ? 'white' : 'black')};\n  background-color: ${({ isSelected }) => (isSelected ? 'black' : 'white')};\n  transform: ${({ isSelected }) => (isSelected ? 'scale(1.15)' : '')};\n  transition: transform 0.25s ease-out, background-color 0.05s ease-in;\n  ${disableUserSelect};\n  ${position};\n  ${space};\n  ${typography};\n  ${layout};\n`;\nButton.defaultProps = {\n  marginY: 3,\n  mx: 2,\n  padding: [2],\n  paddingX: 3,\n  fontSize: 3,\n  type: 'button',\n};\n","import { DRUM } from '../constants';\nimport { useGlobalState } from '../context/GlobalState';\nimport { ACTIONS } from '../context/reducer';\nimport { Button } from '../style/button';\nimport { Flex } from '../style/flex';\n\nexport function SelectDrumSound() {\n  const { state, dispatch } = useGlobalState();\n\n  const handleClick = (e: any) => dispatch({\n    type: ACTIONS.SELECT_DRUM,\n    payload: e.currentTarget.name,\n  });\n\n  const isSelected = (name: string): boolean => state.selectedDrumSound === name;\n  return (\n    <header>\n      <Flex hideScrollbar borderRightWidth={8} borderColor=\"transparent\" borderRightStyle=\"solid\" p=\"0\" maxWidth=\"100vw\" flexDirection=\"row\" overflowX=\"scroll\" justifyContent=\"space-between\">\n        <Button\n          isSelected={isSelected(DRUM.KICK)}\n          name={DRUM.KICK}\n          onClick={handleClick}\n        >\n          Kick\n        </Button>\n        <Button\n          isSelected={isSelected(DRUM.SNARE)}\n          name={DRUM.SNARE}\n          onClick={handleClick}\n        >\n          Snare\n        </Button>\n        <Button\n          isSelected={isSelected(DRUM.HIHAT)}\n          name={DRUM.HIHAT}\n          onClick={handleClick}\n        >\n          Hi-Closed\n        </Button>\n        <Button\n          isSelected={isSelected(DRUM.HIHAT_OPEN)}\n          name={DRUM.HIHAT_OPEN}\n          onClick={handleClick}\n        >\n          Hi-Open\n        </Button>\n        <Button\n          isSelected={isSelected(DRUM.TOM)}\n          name={DRUM.TOM}\n          onClick={handleClick}\n        >\n          TomTom\n        </Button>\n      </Flex>\n    </header>\n  );\n}\n","import { DRUM } from '../constants';\nimport { useGlobalState } from '../context/GlobalState';\nimport { ACTIONS } from '../context/reducer';\nimport { GridItem } from '../style/gridItem';\n\nexport default function BeatStep({ step }: {step: string}) {\n  const { state, dispatch } = useGlobalState();\n  const { activeStep } = state;\n\n  let ACTION: string;\n  let triggeredSteps: {[index:string]: string};\n  switch (state.selectedDrumSound) {\n    case DRUM.KICK:\n      ACTION = ACTIONS.SET_TRIGGERED_KICKS;\n      triggeredSteps = state.triggeredKicks;\n      break;\n    case DRUM.SNARE:\n      ACTION = ACTIONS.SET_TRIGGERED_SNARES;\n      triggeredSteps = state.triggeredSnares;\n      break;\n    case DRUM.HIHAT:\n      ACTION = ACTIONS.SET_TRIGGERED_HIHATS;\n      triggeredSteps = state.triggeredHiHats;\n      break;\n    case DRUM.HIHAT_OPEN:\n      ACTION = ACTIONS.SET_TRIGGERED_OPEN_HIHATS;\n      triggeredSteps = state.triggeredOpenHiHats;\n      break;\n    case DRUM.TOM:\n      ACTION = ACTIONS.SET_TRIGGERED_TOMS;\n      triggeredSteps = state.triggeredToms;\n      break;\n    default:\n      ACTION = ACTIONS.SET_TRIGGERED_KICKS;\n      triggeredSteps = state.triggeredKicks;\n      break;\n  }\n\n  const toggleStep = () => {\n    dispatch({\n      type: ACTION,\n      payload: { ...triggeredSteps, [step]: !triggeredSteps[step] },\n    });\n  };\n\n  return (\n    <GridItem\n      onClick={toggleStep}\n      isTouched={activeStep === step}\n      bg={triggeredSteps[step] ? 'salmon' : ''}\n    >\n      { step }\n    </GridItem>\n  );\n}\n","import { useGlobalState } from '../context/GlobalState';\nimport { Grid } from '../style/grid';\nimport BeatStep from './BeatStep';\n\nexport default function StepSequencer() {\n  // eslint-disable-next-line no-unused-vars\n  const { state } = useGlobalState();\n\n  return (\n\n    <Grid reverse>\n      { state.steps.map((step: string) => (\n        <BeatStep\n          key={step}\n          step={step}\n        />\n      )) }\n    </Grid>\n\n  );\n}\n","import { Draw, Transport } from 'tone';\nimport { start as startTone } from 'tone/build/esm/core/Global';\nimport { ACTIONS } from '../context/reducer';\n\nfunction getPositionWithoutDecimals() {\n  const position = Transport.position.toString();\n  return position.slice(0, position.indexOf('.'));\n}\n\nexport function scheduleRepeat(dispatch: any, interval = '16n') {\n  Transport.scheduleRepeat((time) => {\n    const position = getPositionWithoutDecimals();\n\n    Draw.schedule(() => {\n      dispatch({ type: ACTIONS.SET_ACTIVE_STEP, payload: position });\n    }, time);\n  }, interval);\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport async function startRhythm(dispatch: any) {\n  if (Transport.state === 'started') {\n    return Transport.pause();\n  }\n\n  await startTone();\n\n  scheduleRepeat(dispatch, '16n');\n\n  return Transport.start();\n}\n","import styled, { css } from 'styled-components';\nimport { layout, space } from 'styled-system';\nimport { StyleProps } from './types';\n\nconst devider = 5;\nconst thumbHeigth = 24;\nconst trackHeight = thumbHeigth / devider;\nconst offsetY = 50 - 50 / devider;\n\nconst standardBorder = css`\n    border: 1px solid black;\n`;\nconst standardBorderRadius = css`\n    border-radius: 4px;\n`;\nconst thumbStyle = css`\n    ${standardBorder}\n    border-radius: 50%;\n    width: ${thumbHeigth}px;\n    height: ${thumbHeigth}px;\n    transform: translateY(${-offsetY}%);\n    background: white;\n`;\nconst trackStyle = css`\n    background: black;\n    ${standardBorderRadius}\n    height: ${trackHeight}px;\n`;\nconst sliderStyle = css`\n    &::-webkit-slider-runnable-track {\n        ${trackStyle};\n    }\n    &::-moz-range-track {\n        ${trackStyle};\n    }\n    &::-webkit-slider-thumb {\n        -webkit-appearance: none;\n        ${thumbStyle}\n    }\n    &::-moz-range-thumb {\n        ${thumbStyle}\n    }\n    &:focus {\n        outline: none;\n    }\n`;\nexport const StyledSlider = styled.input<StyleProps>`\n    ${standardBorderRadius}    \n    ${standardBorder}\n    ${sliderStyle};\n    ${space};\n    ${layout};\n`;\nStyledSlider.defaultProps = {\n  margin: 2,\n  paddingX: 3,\n  paddingY: 3,\n  width: '100vw',\n  maxWidth: 400,\n};\n","import { useGlobalState } from '../context/GlobalState';\nimport { ACTIONS } from '../context/reducer';\nimport { StyledSlider } from '../style/slider';\n\nexport function GlobalTempoSlider() {\n  const { state, dispatch } = useGlobalState();\n  return (\n    <>\n      {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n      <label>Tempo</label>\n      <StyledSlider\n        id=\"tempo\"\n        aria-label=\"Tempo\"\n        type=\"range\"\n        max={250}\n        min={1}\n        step={1}\n        value={state.tempo}\n        onChange={(e: any) => dispatch({\n          type: ACTIONS.SET_TEMPO,\n          payload: e.currentTarget.value,\n        })}\n      />\n    </>\n  );\n}\n","import { useGlobalState } from '../context/GlobalState';\nimport { Button } from '../style/button';\nimport { Flex } from '../style/flex';\nimport { ACTIONS } from '../context/reducer';\n\nexport function ClearPatternControls() {\n  const { state, dispatch } = useGlobalState();\n  return (\n    <Flex flexDirection=\"row\">\n      <Button\n        type=\"button\"\n        onClick={() => dispatch({\n          type: ACTIONS.CLEAR_ALL,\n        })}\n      >\n        CLEAR ALL\n      </Button>\n      <Button\n        type=\"button\"\n        onClick={() => dispatch({\n          type: ACTIONS.CLEAR_PATTERN,\n          payload: state.selectedDrumSound,\n        })}\n      >\n        CLEAR SELECTED\n      </Button>\n    </Flex>\n  );\n}\n","import { useGlobalState } from '../context/GlobalState';\nimport { ACTIONS } from '../context/reducer';\nimport { StyledSlider } from '../style/slider';\n\nexport function MasterVolumeSlider() {\n  const { state, dispatch } = useGlobalState();\n  return (\n    <>\n      {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n      <label>Volume</label>\n      <StyledSlider\n        id=\"master-volume\"\n        aria-label=\"master-volume\"\n        type=\"range\"\n        max={20}\n        min={-80}\n        step={0.1}\n        value={state.masterVolume}\n        onChange={(e: any) => dispatch({\n          type: ACTIONS.SET_MASTER_VOLUME,\n          payload: e.currentTarget.value,\n        })}\n      />\n    </>\n  );\n}\n","import { useGlobalState } from '../context/GlobalState';\nimport { Button } from '../style/button';\nimport { Flex } from '../style/flex';\nimport { ACTIONS } from '../context/reducer';\nimport { SAMPLERS } from '../instruments/samplers';\n\nexport function SelectDrumSampler() {\n  const { dispatch } = useGlobalState();\n  return (\n    <Flex flexDirection=\"row\">\n      <Button onClick={() => dispatch({\n        type: ACTIONS.SELECT_DRUM_PRESET,\n        payload: SAMPLERS.TR808,\n      })}\n      >\n        TR808\n      </Button>\n      <Button onClick={() => dispatch({\n        type: ACTIONS.SELECT_DRUM_PRESET,\n        payload: SAMPLERS.CR78,\n      })}\n      >\n        CR78\n      </Button>\n    </Flex>\n  );\n}\n","import { useGlobalState } from '../context/GlobalState';\nimport { Button } from '../style/button';\nimport { ACTIONS } from '../context/reducer';\n\nexport function SaveOrLoadPattern() {\n  const { dispatch } = useGlobalState();\n  return (\n    <>\n      <Button onClick={() => dispatch({ type: ACTIONS.SAVE_PATTERN, payload: 'test-kit-2' })}>\n        SAVE\n      </Button>\n      <Button onClick={() => dispatch({ type: ACTIONS.LOAD_PATTERN, payload: 'test-kit-2' })}>\n        LOAD\n      </Button>\n    </>\n  );\n}\n","import { Transport } from 'tone';\nimport { SelectDrumSound } from '../components/SelectDrumSound';\nimport StepSequencer from '../components/StepSequencer';\nimport { useGlobalState } from '../context/GlobalState';\nimport { startRhythm } from '../helpers/actions';\nimport { Button } from '../style/button';\nimport { Flex } from '../style/flex';\nimport { GlobalTempoSlider } from '../components/GlobalTempoSlider';\nimport { ClearPatternControls } from '../components/ClearPatternControls';\nimport { MasterVolumeSlider } from '../components/MasterVolumeSlider';\nimport { SelectDrumSampler } from '../components/SelectDrumSampler';\nimport { SaveOrLoadPattern } from '../components/SaveOrLoadPattern';\n\nexport default function RythmPage() {\n  const { dispatch } = useGlobalState();\n\n  return (\n    <Flex justifyContent=\"space-between\">\n      <h1>Bungi</h1>\n      <ClearPatternControls />\n      <SelectDrumSampler />\n      <GlobalTempoSlider />\n      <MasterVolumeSlider />\n      <SaveOrLoadPattern />\n      <Button onClick={() => startRhythm(dispatch)}>\n        {Transport.state !== 'started' ? 'Play' : 'Pause'}\n      </Button>\n      <SelectDrumSound />\n      <StepSequencer />\n    </Flex>\n  );\n}\n","import styled from 'styled-components';\nimport { position } from 'styled-system';\nimport { StyleProps } from './types';\n\nexport const AppContainer = styled.div<StyleProps>(\n  position,\n);\nAppContainer.defaultProps = {\n  position: 'absolute', top: 0, bottom: 0, right: 0, left: 0,\n};\n","/* eslint-disable import/extensions */\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Menu } from './components/Menu';\nimport GridGoon from './pages/GridGoon';\nimport HomePage from './pages/HomePage';\nimport RythmPage from './pages/RythmPage';\nimport { AppContainer } from './style/appContainer';\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <HomePage />\n      </Route>\n      <Route path=\"/rythm\">\n        <RythmPage />\n      </Route>\n      <Route path=\"/grid-goon\">\n        <GridGoon />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/bungi-machine\">\n      <AppContainer>\n        <Menu />\n        <Routes />\n      </AppContainer>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n ${normalize}\n  :root,\n  html,\n  body {\n    margin: 0;\n    font-family: Arial;\n  }\n\n  * {\n      box-sizing: border-box;\n      -webkit-appearance: none;\n      text-decoration: none;\n\n  }\n\n  button {\n    background-color: transparent;\n  }\n`;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './style/globalStyle';\nimport { GlobalState } from './context/GlobalState';\n\nReactDOM.render(\n  <StrictMode>\n    <GlobalState>\n      <GlobalStyle />\n      <App />\n    </GlobalState>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
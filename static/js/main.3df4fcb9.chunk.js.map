{"version":3,"sources":["constants.ts","helpers/barsAndBeats.ts","context/reducer.ts","sounds.ts","context/GlobalState.tsx","style/disableUserSelect.ts","style/menuButton.ts","style/menuContainer.ts","style/styledLink.ts","components/Menu.tsx","style/flex.ts","style/grid.tsx","style/gridItem.ts","components/TriggerPoint.tsx","pages/GridGoon.tsx","pages/HomePage.tsx","components/BeatStep.tsx","components/StepSequencer.tsx","helpers/actions.ts","style/button.ts","pages/RythmPage.tsx","style/appContainer.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","style/globalStyle.ts","index.tsx"],"names":["numbers","Array","from","multiplier","keys","bebopLocrian","reverse","oneBarSixteenNote","ACTIONS","reducer","state","action","type","selectedDrumSound","payload","selectedSynthSound","tempo","activeStep","triggeredSteps","basicSynth","Synth","volume","envelope","attack","release","sustain","toDestination","sineOsc","Oscillator","frequency","sineAmpEnv","Noise","AmplitudeEnvelope","decay","initialState","loopEnd","isLooping","note","steps","releaseInSeconds","store","createContext","Provider","GlobalState","children","useReducer","dispatch","useEffect","connect","start","triggerAttackRelease","value","useGlobalState","useContext","disableUserSelect","css","hideScrollBar","MenuButton","styled","button","isOpen","position","space","typography","layout","defaultProps","top","left","marginY","marginX","padding","paddingX","fontSize","MenuContainer","div","props","color","flexbox","bottom","maxWidth","StyledLink","Link","Menu","useState","showMenu","setShowMenu","showSettings","setShowSettings","toggleMenu","onClick","zIndex","right","flexWrap","bg","to","m","Flex","hideScrollbar","border","display","flexDirection","alignItems","justifyContent","p","Grid","maxHeight","GridItem","isTouched","TriggerPoint","voice","octave","setIsTouched","handleTouchStart","e","preventDefault","triggerAttack","Tone","handleTouchEnd","triggerRelease","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","GridGoon","height","map","number","length","HomePage","BeatStep","step","StepSequencer","visible","oscillator","getPositionWithoutDecimals","Transport","toString","slice","indexOf","scheduleRepeat","interval","time","Draw","schedule","console","log","a","pause","startTone","Button","RythmPage","loop","startRhythm","borderRightWidth","borderColor","borderRightStyle","overflowX","mx","AppContainer","Routes","exact","path","App","basename","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3df4fcb9.chunk.js","sourcesContent":["export const multiplier = 4;\nexport const numbers = Array.from(Array(multiplier * multiplier).keys());\n\n// create a synth and connect it to the main output (your speakers)\nexport const bebopLocrian = ['C', 'Db', 'Eb', 'F', 'Gb', 'G', 'Ab', 'Bb'].reverse();\n\nexport const DRUM = {\n  KICK: 'KICK',\n  SNARE: 'SNARE',\n  HIHAT: 'HIHAT',\n  HIHAT_OPEN: 'HIHAT_OPEN',\n  TOM: 'TOM',\n};\n\nexport const SYNTH = {\n  SQUARE: 'SQURE',\n  SINE: 'SINE',\n  SAW: 'SAW',\n};\n","export const oneBarEightNote: string[] = [\n  '0:0:0',\n  '0:0:2',\n  '0:1:0',\n  '0:1:2',\n  '0:2:0',\n  '0:2:2',\n  '0:3:0',\n  '0:3:2',\n];\n\nexport const oneBarSixteenNote: string[] = [\n  '0:0:0',\n  '0:0:1',\n  '0:0:2',\n  '0:0:3',\n  '0:1:0',\n  '0:1:1',\n  '0:1:2',\n  '0:1:3',\n  '0:2:0',\n  '0:2:1',\n  '0:2:2',\n  '0:2:3',\n  '0:3:0',\n  '0:3:1',\n  '0:3:2',\n  '0:3:3',\n].reverse();\n","import { IGlobalState } from './GlobalState';\n\nexport const ACTIONS = {\n  SELECT_DRUM: 'SELECT_DRUM',\n  SELECT_SYNTH: 'SELECT_SYNTH',\n  SET_TEMPO: 'SET_TEMPO',\n  SET_ACTIVE_STEP: 'SET_ACTIVE_STEP',\n  SET_TRIGGERED_STEPS: 'SET_TRIGGERED_STEPS',\n};\n\ninterface Action {\n    type: string;\n    payload: any;\n}\n\nexport const reducer = (state: IGlobalState | any, action: Action) => {\n  switch (action.type) {\n    case ACTIONS.SELECT_DRUM:\n      return { ...state, selectedDrumSound: action.payload };\n    case ACTIONS.SELECT_SYNTH:\n      return { ...state, selectedSynthSound: action.payload };\n    case ACTIONS.SET_TEMPO:\n      return { ...state, tempo: action.payload };\n    case ACTIONS.SET_ACTIVE_STEP:\n      return { ...state, activeStep: action.payload };\n    case ACTIONS.SET_TRIGGERED_STEPS:\n      return { ...state, triggeredSteps: action.payload };\n    default:\n      return state;\n  }\n};\n","import {\n  AmplitudeEnvelope, Noise, Oscillator, Synth,\n} from 'tone';\n\nexport const basicSynth = new Synth({\n  volume: -10,\n  envelope: {\n    attack: 0.01,\n    release: 0.2,\n    sustain: 0.5,\n  },\n}).toDestination();\n\nexport const sineOsc = new Oscillator({ frequency: 60, type: 'triangle9' });\nexport const noiseOsc = new Noise({ type: 'white', volume: -10 });\n\nexport const sineEnvSettings: object = {\n  attack: 0.01,\n  decay: 0.3,\n  sustain: 0.5,\n  release: 0.5,\n};\nexport const noiseEnvSettings = {\n  attack: 0.01,\n  decay: 0.2,\n  sustain: 1,\n  release: 0.01,\n};\n\nexport const sineAmpEnv = new AmplitudeEnvelope(sineEnvSettings).toDestination();\nexport const noiseAmpEnv = new AmplitudeEnvelope(noiseEnvSettings).toDestination();\n","// store.js\nimport {\n  Context, createContext, ReactNode, useContext, useEffect, useReducer,\n} from 'react';\nimport { DRUM, SYNTH } from '../constants';\nimport { oneBarSixteenNote } from '../helpers/barsAndBeats';\nimport { reducer } from './reducer';\nimport { sineAmpEnv, sineOsc } from '../sounds';\n\nexport interface IGlobalState {\n    selectedDrumSound: string;\n    selectedSynthSound: string;\n    note: string;\n    tempo: number;\n    isLooping: boolean;\n    loopEnd: string;\n    steps: string[];\n    activeStep: string | null;\n    triggeredSteps: { [index:string] : string } | null;\n    releaseInSeconds: number;\n}\n\nconst initialState: IGlobalState = {\n  tempo: 125,\n  loopEnd: '1:0:0',\n  isLooping: true,\n  note: '',\n  steps: oneBarSixteenNote,\n  activeStep: null,\n  selectedDrumSound: DRUM.KICK,\n  selectedSynthSound: SYNTH.SQUARE,\n  triggeredSteps: {},\n  releaseInSeconds: 0.03,\n};\n\nconst store: Context<IGlobalState | any> = createContext(initialState);\nconst { Provider } = store;\n\nconst GlobalState = ({ children }: {children: ReactNode}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    if (state.triggeredSteps[state.activeStep]) {\n      sineOsc.connect(sineAmpEnv).start();\n      sineAmpEnv.triggerAttackRelease(state.releaseInSeconds);\n    }\n  }, [state.activeStep, state.triggeredSteps]);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nconst useGlobalState = () => useContext(store);\n\nexport { useGlobalState, GlobalState };\n","import { css } from 'styled-components';\n\nexport const disableUserSelect = css`\n -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n     -khtml-user-select: none; /* Konqueror HTML */\n       -moz-user-select: none; /* Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome and Opera */\n`;\n\nexport const hideScrollBar = css`\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n`;\n","import styled from 'styled-components';\nimport {\n  layout, position, space, typography,\n} from 'styled-system';\nimport { disableUserSelect } from './disableUserSelect';\nimport { StyleProps } from './types';\n\nexport const MenuButton = styled.button<StyleProps & any>`\n  z-index: 10;\n  background-color: ${({ isOpen }) => (isOpen ? 'black' : 'white')};;\n  color: ${({ isOpen }) => (isOpen ? 'white' : 'black')};\n  border: 1px solid;\n  border-radius: 4px;\n  ${disableUserSelect};\n  ${position};\n  ${space};\n  ${typography};\n  ${layout};\n`;\nMenuButton.defaultProps = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  marginY: 3,\n  marginX: [3, 4, 6],\n  padding: [2],\n  paddingX: 3,\n  fontSize: 4,\n};\n","import styled from 'styled-components';\nimport {\n  color, flexbox, layout, position, space,\n} from 'styled-system';\nimport { StyleProps } from './types';\n\nexport const MenuContainer = styled.div<StyleProps & any>`\n transform: ${(props) => (props.isOpen ? '' : 'translateX(-100%)')};\n  background-color: black;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  transition: transform 0.1s ease-in-out;\n ${position};\n  ${space};\n  ${layout};\n  ${color};\n  ${flexbox};\n`;\nMenuContainer.defaultProps = {\n  position: 'absolute',\n  top: 0,\n  bottom: 0,\n  maxWidth: ['100vw', '50vw'],\n};\n","import { Link } from 'react-router-dom';\nimport styled, { DefaultTheme, ThemedStyledInterface } from 'styled-components';\nimport { color, space } from 'styled-system';\n\ntype StyledTypes = ThemedStyledInterface<DefaultTheme> & any;\nexport const StyledLink: StyledTypes = styled(Link)`\n    background-color: black;\n    color: whitesmoke;\n    transition: all 0.2s ease-in-out;\n    &:focus, :hover {\n        transform: scale(1.2);\n        box-shadow: 0px 0px 30px 30px rgba(250,250,250, 0.4) inset, 0px 0px 20px 10px rgba(250, 250,250, 0.7);\n    };\n    ${space};\n    ${color};\n`;\n\nStyledLink.defaultProps = {\n  padding: 5,\n  m: 3,\n\n};\n","import { useState } from 'react';\nimport { useGlobalState } from '../context/GlobalState';\nimport { ACTIONS } from '../context/reducer';\nimport { MenuButton } from '../style/menuButton';\nimport { MenuContainer } from '../style/menuContainer';\nimport { StyledLink } from '../style/styledLink';\n\nexport function Menu() {\n  const { dispatch } = useGlobalState();\n\n  const [showMenu, setShowMenu] = useState<boolean>(false);\n  const [showSettings, setShowSettings] = useState<boolean>(false);\n\n  const toggleMenu = () => {\n    dispatch({ type: ACTIONS.SET_ACTIVE_STEP, payload: 'YES' });\n    setShowMenu(!showMenu);\n  };\n  return (\n    <>\n      <MenuButton isOpen={showMenu} onClick={toggleMenu}>\n        {showMenu ? 'X' : 'O'}\n      </MenuButton>\n      <MenuContainer isOpen={showMenu}>\n        <MenuButton zIndex={25} left=\"\" right={0} isOpen={showSettings} onClick={() => setShowSettings(!showSettings)}>\n          {showSettings ? 'X' : '|||'}\n        </MenuButton>\n        <MenuContainer flexWrap=\"wrap\" zIndex={20} isOpen={showSettings} bg=\"gray\" />\n        <StyledLink to=\"/rythm\" onClick={toggleMenu}>Riddm</StyledLink>\n        <StyledLink to=\"/grid-goon\" onClick={toggleMenu}>Grid Goon</StyledLink>\n      </MenuContainer>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport {\n  border,\n  color, flexbox, layout, position, space,\n} from 'styled-system';\nimport { hideScrollBar } from './disableUserSelect';\nimport { StyleProps } from './types';\n\nexport const Flex = styled.div<StyleProps & any>`\n  ${({ hideScrollbar }) => (hideScrollbar ? hideScrollBar : '')}\n  ${space};\n  ${layout};\n  ${flexbox};\n  ${color};\n  ${position};\n  ${border};\n`;\n\nFlex.defaultProps = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  p: 1,\n};\n","import styled from 'styled-components';\nimport { flexbox, layout } from 'styled-system';\nimport { StyleProps } from './types';\nimport { multiplier } from '../constants';\n\nexport const Grid = styled.div<StyleProps & any>`\n    display: grid;\n    direction: ${({ reverse }) => (reverse ? 'rtl' : '')};\n    grid-gap: 5px;\n    height: 100vw;\n    width: 100%;\n    grid-template-columns: repeat(${multiplier}, 1fr);\n    grid-template-rows: repeat(${multiplier}, 1fr);\n    ${flexbox};\n    ${layout};\n`;\nGrid.defaultProps = {\n  padding: [2, 4],\n  maxHeight: ['100vh', '70vh'],\n  maxWidth: ['100vh', '70vh'],\n};\n","import styled from 'styled-components';\nimport { color } from 'styled-system';\nimport { StyleProps } from './types';\nimport { disableUserSelect } from './disableUserSelect';\n\nexport const GridItem = styled.button<StyleProps & any>`\n    height: 100%;\n    transition: all 0.15s;\n    border: 1px solid;\n    background-color: ${({ isTouched }) => (isTouched ? 'black' : 'transparent')};\n    border-radius: ${({ isTouched }) => (isTouched ? '50%' : '5%')};\n    ${disableUserSelect};\n    ${color}\n`;\n","import { useState } from 'react';\nimport * as Tone from 'tone';\nimport { Synth, SynthOptions } from 'tone';\nimport { GridItem } from '../style/gridItem';\n\ninterface Props {\n  voice: Synth<SynthOptions>;\n  note: string;\n  octave: string;\n}\n\nexport default function TriggerPoint({ voice, note, octave }: Props) {\n  const [isTouched, setIsTouched] = useState<boolean>(false);\n\n  const handleTouchStart = (e: any) => {\n    e.preventDefault();\n    setIsTouched(true);\n    voice.triggerAttack(note + octave, Tone.now());\n  };\n\n  const handleTouchEnd = (e: any) => {\n    e.preventDefault();\n    setIsTouched(false);\n    voice.triggerRelease(Tone.now());\n  };\n\n  return (\n    <GridItem\n      isTouched={isTouched}\n      onMouseDown={handleTouchStart}\n      onMouseUp={handleTouchEnd}\n      onTouchStart={handleTouchStart}\n      onTouchEnd={handleTouchEnd}\n    >\n      {note + octave}\n    </GridItem>\n  );\n}\n","import { Flex } from '../style/flex';\nimport { Grid } from '../style/grid';\nimport TriggerPoint from '../components/TriggerPoint';\nimport { bebopLocrian, numbers } from '../constants';\nimport { basicSynth } from '../sounds';\n\nexport default function GridGoon() {\n  return (\n    <Flex height=\"100%\">\n      <Grid>\n        {\n          numbers.map((number) => {\n            let octave: string = '3';\n            let note = bebopLocrian[number];\n            if (number > 7) {\n              note = bebopLocrian[number - bebopLocrian.length];\n              octave = '2';\n            }\n            return (\n              <TriggerPoint voice={basicSynth} note={note} octave={octave} />\n            );\n          })\n        }\n      </Grid>\n    </Flex>\n  );\n}\n","import { Flex } from '../style/flex';\nimport { StyledLink } from '../style/styledLink';\n\nexport default function HomePage() {\n  return (\n    <Flex height=\"100%\">\n      <StyledLink to=\"grid-goon\">Grid Goon</StyledLink>\n      <StyledLink to=\"rythm\">Riddm</StyledLink>\n    </Flex>\n  );\n}\n","import { useGlobalState } from '../context/GlobalState';\nimport { ACTIONS } from '../context/reducer';\nimport { GridItem } from '../style/gridItem';\n\nexport default function BeatStep({ step }: {step: string}) {\n  const { state, dispatch } = useGlobalState();\n  const { triggeredSteps, activeStep } = state;\n\n  const toggleStep = () => {\n    dispatch({\n      type: ACTIONS.SET_TRIGGERED_STEPS,\n      payload: { ...triggeredSteps, [step]: !triggeredSteps[step] },\n    });\n  };\n\n  return (\n    <GridItem\n      onClick={toggleStep}\n      isTouched={activeStep === step}\n      bg={triggeredSteps[step] ? 'salmon' : ''}\n    >\n      { step }\n    </GridItem>\n  );\n}\n","import { useGlobalState } from '../context/GlobalState';\nimport { Grid } from '../style/grid';\nimport BeatStep from './BeatStep';\n\ninterface Props {\n  visible: boolean;\n  steps: string[];\n  oscillator: any;\n  envelope: any;\n}\nexport default function StepSequencer(props: Props) {\n  const {\n    // eslint-disable-next-line no-unused-vars\n    visible,\n    steps,\n    // eslint-disable-next-line no-unused-vars\n    oscillator,\n    // eslint-disable-next-line no-unused-vars\n    envelope,\n  } = props;\n\n  // eslint-disable-next-line no-unused-vars\n  const { state } = useGlobalState();\n  // const { releaseInSeconds, triggeredSteps, activeStep } = state;\n\n  // useEffect(() => {\n  //   if (triggeredSteps[activeStep]) {\n  //     oscillator.connect(envelope).start();\n  //     envelope.triggerAttackRelease(releaseInSeconds);\n  //   }\n  // }, [activeStep, oscillator, triggeredSteps]);\n\n  return (\n\n    <Grid reverse>\n      { steps.map((step) => (\n        <BeatStep\n          key={step}\n          step={step}\n        />\n      )) }\n    </Grid>\n\n  );\n}\n","import { Draw, Transport } from 'tone';\nimport { start as startTone } from 'tone/build/esm/core/Global';\nimport { ACTIONS } from '../context/reducer';\n\nfunction getPositionWithoutDecimals() {\n  const position = Transport.position.toString();\n  return position.slice(0, position.indexOf('.'));\n}\n\nexport function scheduleRepeat(dispatch: any, interval = '16n') {\n  Transport.scheduleRepeat((time) => {\n    const position = getPositionWithoutDecimals();\n\n    Draw.schedule(() => {\n      dispatch({ type: ACTIONS.SET_ACTIVE_STEP, payload: position });\n      console.log(position);\n    }, time);\n  }, interval);\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport async function startRhythm(dispatch: any) {\n  if (Transport.state === 'started') {\n    return Transport.pause();\n  }\n\n  await startTone();\n\n  scheduleRepeat(dispatch, '16n');\n\n  return Transport.start();\n}\n","import styled from 'styled-components';\nimport {\n  layout, position, space, typography,\n} from 'styled-system';\nimport { disableUserSelect } from './disableUserSelect';\nimport { StyleProps } from './types';\n\nexport const Button = styled.button<StyleProps & any>`\n  border: 1px solid;\n  border-radius: 4px;\n  font-weight: \"200\";\n  white-space: nowrap;\n  ${disableUserSelect};\n  ${position};\n  ${space};\n  ${typography};\n  ${layout};\n`;\nButton.defaultProps = {\n  marginY: 3,\n  mx: 2,\n  padding: [2],\n  paddingX: 3,\n  fontSize: 3,\n};\n","import { Transport } from 'tone';\nimport StepSequencer from '../components/StepSequencer';\nimport { useGlobalState } from '../context/GlobalState';\nimport { startRhythm } from '../helpers/actions';\nimport { sineAmpEnv, sineOsc } from '../sounds';\nimport { Button } from '../style/button';\nimport { Flex } from '../style/flex';\n\nexport default function RythmPage() {\n  const { state, dispatch } = useGlobalState();\n\n  Transport.loop = state.isLooping;\n  Transport.loopEnd = state.loopEnd;\n\n  return (\n    <Flex justifyContent=\"space-between\">\n      <h1>Rhythm!</h1>\n      <Button type=\"button\" onClick={() => startRhythm(dispatch)}>\n        {Transport.state !== 'started' ? 'Play' : 'Pause'}\n      </Button>\n      <header>\n        <Flex hideScrollbar borderRightWidth={8} borderColor=\"transparent\" borderRightStyle=\"solid\" p=\"0\" maxWidth=\"100vw\" flexDirection=\"row\" overflowX=\"scroll\" justifyContent=\"space-between\">\n          <Button> Kick </Button>\n          <Button> Snare </Button>\n          <Button> Hi-Closed </Button>\n          <Button> Hi-Open </Button>\n          <Button> TomTom </Button>\n        </Flex>\n      </header>\n      <StepSequencer\n        envelope={sineAmpEnv}\n        oscillator={sineOsc}\n        steps={state.steps}\n        visible\n      />\n    </Flex>\n  );\n}\n","import styled from 'styled-components';\nimport { position } from 'styled-system';\nimport { StyleProps } from './types';\n\nexport const AppContainer = styled.div<StyleProps>(\n  position,\n);\nAppContainer.defaultProps = {\n  position: 'absolute', top: 0, bottom: 0, right: 0, left: 0,\n};\n","/* eslint-disable import/extensions */\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Menu } from './components/Menu';\nimport GridGoon from './pages/GridGoon';\nimport HomePage from './pages/HomePage';\nimport RythmPage from './pages/RythmPage';\nimport { AppContainer } from './style/appContainer';\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <HomePage />\n      </Route>\n      <Route path=\"/rythm\">\n        <RythmPage />\n      </Route>\n      <Route path=\"/grid-goon\">\n        <GridGoon />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/bungi-machine\">\n      <AppContainer>\n        <Menu />\n        <Routes />\n      </AppContainer>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n ${normalize}\n  :root,\n  html,\n  body {\n    margin: 0;\n    font-family: Arial;\n  }\n\n  * {\n      box-sizing: border-box;\n      -webkit-appearance: none;\n      text-decoration: none;\n\n  }\n\n  button {\n    background-color: transparent;\n  }\n`;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './style/globalStyle';\nimport { GlobalState } from './context/GlobalState';\n\nReactDOM.render(\n  <StrictMode>\n    <GlobalState>\n      <GlobalStyle />\n      <App />\n    </GlobalState>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}